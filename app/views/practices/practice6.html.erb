<script type="text/javascript">
var w = 500
var h = 300;
var padding = 30

var dataset = [];
var numDataPoints = 50;

var xRange = Math.random() * 1000;
var yRange = Math.random() * 1000;
for (var i = 0; i < numDataPoints; i++) {
    var newNumber1 = Math.floor(Math.random() * xRange);
    var newNumber2 = Math.floor(Math.random() * yRange);
    dataset.push([newNumber1, newNumber2]);
}

var xScale = d3.scale.linear()
                     .domain([0, d3.max(dataset, function (d) {return d[0]; })])
                     .range([padding, w - padding * 5])

var yScale = d3.scale.linear()
                     .domain([0, d3.max(dataset, function (d) {return d[1]; })])
                     .range([h - padding, padding])


var rScale = d3.scale.linear()
                     .domain([0, d3.max(dataset, function (d) {return d[1]; })])
                     .range([2, 5])

var svg = d3.select("body")
        .append("svg")
        .attr("width", w)
        .attr("height", h)

svg.selectAll("circle")
   .data(dataset)
   .enter()
   .append("circle")
   .attr("cx", function (d) {
     return xScale(d[0]);
   })
   .attr("cy", function (d) {
     return yScale(d[1])
   })
   .attr("r", function (d) {
     return rScale(d[1])
   });


// svg.selectAll("text")
//    .data(dataset)
//    .enter()
//    .append("text")
//    .text(function (d) {
//      return "(" + d[0] + ", " + d[1] + ")"
//    })
//    .attr("x", function (d) {
//      return xScale(d[0]);
//    })
//    .attr("y", function (d) {
//      return yScale(d[1] + -5);
//    })
//    .attr("font-family", "sans-serif")
//    .attr("font-size", "11px")
//    .attr("fill", "red");

// Define the axis
 var xAxis = d3.svg.axis()//d3 element part of svg and an axis
                   .scale(xScale) // tell it which scales it belongs to
                   .orient("bottom")// basically this tells it where the value labels should be
                   .ticks(10) //number of axes divisions.

 svg.append("g")
    .attr("class", "axis")
    .attr("transform", "translate(0," + (h - padding) + ")")
    .call(xAxis);

// transform=translate(x,y) just moves element to the specific point we want in this case 280 px below the margin top h-padding
// append a "g" group element to the svg container because the axis is going to contain
// lots of values and shit that should be in this case group together.
// Also the it will be much easier to add styling when all the elements are grouped
// we use .call because we are actually going to draw an axis in here

var yAxis = d3.svg.axis()
                  .scale(yScale)
                  .orient("left")
                  .ticks(5)
svg.append('g')
   .attr("class", "axis")
   .attr("transform", "translate( " + padding + ", 0)")
   .call(yAxis)

</script>

<style media="screen">
.axis path,
.axis line {
  fill: none;
  stroke: black;
  shape-rendering: crispEdges;
}

.axis text {
  font-family: sans-serif;
  font-size: 11px;
}
</style>
